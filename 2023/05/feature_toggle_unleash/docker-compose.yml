version: "3.9"
services:
  unleash:
    # https://docs.getunleash.io/reference/deploy/getting-started#option-one---use-docker
    image: unleashorg/unleash-server:4.22.5
    ports:
      - "4242:4242"
    environment:
      # https://github.com/Unleash/unleash/blob/417b56913a25cbeb91effb695777f52daea659cd/src/lib/create-config.ts#L120-L148
      DATABASE_URL: "postgres://unleash:jasmine@db/development"
      DATABASE_SSL: "false"
      LOG_LEVEL: "info"
      # https://docs.getunleash.io/reference/deploy/configuring-unleash#further-customization
      # Proxy clients must use one of these keys to connect to the
      # Proxy. To add more keys, separate them with a comma (`key1,key2`).
      INIT_FRONTEND_API_TOKENS: "default:development.unleash-insecure-frontend-api-token"
      # Initialize Unleash with a default set of client API tokens. To
      # initialize Unleash with multiple tokens, separate them with a
      # comma (`token1,token2`).
      INIT_CLIENT_API_TOKENS: "default:development.unleash-insecure-api-token"
    depends_on:
      db:
        condition: service_healthy
    command: [ "node", "index.js" ]
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:4242/health || exit 1
      interval: 1s
      timeout: 1m
      retries: 5
      start_period: 15s
  db:
    image: postgres:15
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: "development"
      POSTGRES_USER: "unleash"
      POSTGRES_PASSWORD: "jasmine"
    volumes:
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - ./iac/:/tmp/postgresql-dump
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "--dbname=development",
          "--username=unleash"
        ]
      interval: 2s
      timeout: 1m
      retries: 5
      start_period: 10s
  project-python-be-and-fe:
    depends_on:
      unleash:
        condition: service_healthy
    build:
      context: app-python-django
    env_file: app-python-django/.env.development
    ports:
      - "8000:8000"
  product-javascript-be:
    depends_on:
      unleash:
        condition: service_healthy
    build:
      context: app-javascript-nextjs
    env_file: app-javascript-nextjs/.env.development
    ports:
      - "3000:3000"
  db-sql-server:
    image: mcr.microsoft.com/mssql/server
    environment:
      SA_PASSWORD: Password1
      ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "Password1" -Q "SELECT 1" -b -o /dev/null
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s
  project-csharp-be-and-fe:
    image: mcr.microsoft.com/dotnet/sdk:7.0
    env_file: app-csharp-aspnet/.env.development
    depends_on:
      db-sql-server:
        condition: service_healthy
      unleash:
        condition: service_healthy
    volumes:
      - "./app-csharp-aspnet/:/app/"
    ports:
      - "5238:80"
    working_dir: /app
    command: "/app/scripts/start.sh"
